{"ast":null,"code":"var _jsxFileName = \"/Users/artemshramko/Documents/projects/react/imij-react/src/views/items/ItemsListView/AddItemForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Box, Button, Card, CardContent, CardHeader, Divider, IconButton, Grid, TextField, makeStyles } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nconst useStyles = makeStyles(() => ({\n  root: {},\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: '50px'\n  }\n})); // Add Item functional component\n\nfunction AddItemForm({\n  className,\n  handleModalClose,\n  ...rest\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [values, setValues] = useState({\n    barcode: '',\n    name: '',\n    price: '',\n    amount: ''\n  });\n\n  function handleChange(event) {\n    setValues({ ...values,\n      [event.target.name]: event.target.value\n    });\n    console.log(values);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.modal),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", Object.assign({\n    autoComplete: \"off\",\n    noValidate: true,\n    className: clsx(classes.root, className, classes.modal)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    subheader: \"Please enter product details\",\n    title: \"Add new product\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleModalClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    helperText: \"Please specify the barcode of the product\",\n    label: \"Barcode\",\n    name: \"barcode\",\n    onChange: handleChange,\n    required: true,\n    value: values.barcode,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Product name\",\n    name: \"name\",\n    onChange: handleChange,\n    required: true,\n    value: values.name,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Price\",\n    name: \"price\",\n    onChange: handleChange,\n    type: \"number\",\n    required: true,\n    value: values.price,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Amount\",\n    name: \"amount\",\n    onChange: handleChange,\n    type: \"number\",\n    value: values.amount,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    p: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, \"Save details\")))));\n}\n\n_s(AddItemForm, \"Vl/zPPh7Ncd8gbpdh+48SFNFIAU=\", false, function () {\n  return [useStyles];\n});\n\n_c = AddItemForm;\nAddItemForm.propTypes = {\n  className: PropTypes.string,\n  handleModalClose: PropTypes.func\n};\nexport default AddItemForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddItemForm\");","map":{"version":3,"sources":["/Users/artemshramko/Documents/projects/react/imij-react/src/views/items/ItemsListView/AddItemForm.js"],"names":["React","useState","clsx","PropTypes","Box","Button","Card","CardContent","CardHeader","Divider","IconButton","Grid","TextField","makeStyles","CloseIcon","useStyles","root","modal","display","alignItems","justifyContent","marginTop","AddItemForm","className","handleModalClose","rest","classes","values","setValues","barcode","name","price","amount","handleChange","event","target","value","console","log","propTypes","string","func"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Grid,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: '50px'\n  },\n}));\n\n// Add Item functional component\nfunction AddItemForm({ className, handleModalClose, ...rest }) {\n  const classes = useStyles();\n  const [values, setValues] = useState({\n    barcode: '',\n    name: '',\n    price: '',\n    amount: ''\n  });\n\n  function handleChange(event) {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n    console.log(values);\n  }\n\n  return (\n    <div className={clsx(classes.modal)}>\n      <form\n        autoComplete=\"off\"\n        noValidate\n        className={clsx(classes.root, className, classes.modal)}\n        {...rest}\n      >\n        <Card>\n          <CardHeader\n            subheader=\"Please enter product details\"\n            title=\"Add new product\"\n          >\n            <IconButton onClick={handleModalClose}>\n              <CloseIcon />\n            </IconButton>\n          </CardHeader>  \n          <Divider />\n          <CardContent>\n            <Grid\n              container\n              spacing={3}\n            >\n              <Grid\n                item\n                md={6}\n                xs={12}\n              >\n                {/* barcode */}\n                <TextField\n                  fullWidth\n                  helperText=\"Please specify the barcode of the product\"\n                  label=\"Barcode\"\n                  name=\"barcode\"\n                  onChange={handleChange}\n                  required\n                  value={values.barcode}\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid\n                item\n                md={6}\n                xs={12}\n              >\n                {/* product name */}\n                <TextField\n                  fullWidth\n                  label=\"Product name\"\n                  name=\"name\"\n                  onChange={handleChange}\n                  required\n                  value={values.name}\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid\n                item\n                md={6}\n                xs={12}\n              >\n                <TextField\n                  fullWidth\n                  label=\"Price\"\n                  name=\"price\"\n                  onChange={handleChange}\n                  type=\"number\"\n                  required\n                  value={values.price}\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid\n                item\n                md={6}\n                xs={12}\n              >\n                <TextField\n                  fullWidth\n                  label=\"Amount\"\n                  name=\"amount\"\n                  onChange={handleChange}\n                  type=\"number\"\n                  value={values.amount}\n                  variant=\"outlined\"\n                />\n              </Grid>\n            </Grid>\n          </CardContent>\n          <Divider />\n          <Box\n            display=\"flex\"\n            justifyContent=\"flex-end\"\n            p={2}\n          >\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n            >\n              Save details\n            </Button>\n          </Box>\n        </Card>\n      </form>\n    </div>\n  );\n}\n\nAddItemForm.propTypes = {\n  className: PropTypes.string,\n  handleModalClose: PropTypes.func\n};\n\nexport default AddItemForm;\n"]},"metadata":{},"sourceType":"module"}