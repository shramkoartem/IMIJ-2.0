{"ast":null,"code":"var _jsxFileName = \"/Users/artemshramko/Documents/projects/react/imij-react/src/views/checkout/CheckoutView/Results.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types'; // import moment from 'moment';\n\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { // Avatar,\nBox, Card, Table, TableBody, TableCell, TableHead, TablePagination, TableRow // Typography,\n, makeStyles } from '@material-ui/core'; // import getInitials from 'src/utils/getInitials';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  avatar: {\n    marginRight: theme.spacing(2)\n  }\n}));\n\nconst Results = ({\n  className,\n  items,\n  ...rest\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(0);\n  console.log(items);\n  console.log('results render');\n\n  const handleLimitChange = event => {\n    setLimit(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  return /*#__PURE__*/React.createElement(Card, Object.assign({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(PerfectScrollbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    minWidth: 1050,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"Barcode\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \"Price\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \"Amount\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, [...items].slice(page * limit, page * limit + limit).map(item => /*#__PURE__*/React.createElement(TableRow, {\n    hover: true,\n    key: item.id,\n    selected: selectedItemIds.indexOf(item.id) !== -1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 19\n    }\n  }, item.barcode), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }\n  }, item.name), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 19\n    }\n  }, item.price), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 19\n    }\n  }, item.amount))))))), /*#__PURE__*/React.createElement(TablePagination, {\n    component: \"div\",\n    count: items.length,\n    onChangePage: handlePageChange,\n    onChangeRowsPerPage: handleLimitChange,\n    page: page,\n    rowsPerPage: limit,\n    rowsPerPageOptions: [5, 10, 25],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(Results, \"J43Cr8HPCSTkYZFGXhukz9ESXco=\", false, function () {\n  return [useStyles];\n});\n\n_c = Results;\nResults.propTypes = {\n  className: PropTypes.string,\n  items: PropTypes.array.isRequired\n};\nexport default Results;\n\nvar _c;\n\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"sources":["/Users/artemshramko/Documents/projects/react/imij-react/src/views/checkout/CheckoutView/Results.js"],"names":["React","useState","clsx","PropTypes","PerfectScrollbar","Box","Card","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","makeStyles","useStyles","theme","root","avatar","marginRight","spacing","Results","className","items","rest","classes","limit","setLimit","page","setPage","console","log","handleLimitChange","event","target","value","handlePageChange","newPage","slice","map","item","id","selectedItemIds","indexOf","barcode","name","price","amount","length","propTypes","string","array","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n// import moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  // Avatar,\n  Box,\n  Card,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  // Typography,\n  makeStyles\n} from '@material-ui/core';\n// import getInitials from 'src/utils/getInitials';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  avatar: {\n    marginRight: theme.spacing(2)\n  }\n}));\n\nconst Results = ({ className, items, ...rest }) => {\n  const classes = useStyles();\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(0);\n\n  console.log(items);\n  console.log('results render');\n\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <PerfectScrollbar>\n        <Box minWidth={1050}>\n          <Table stickyHeader aria-label=\"sticky table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>\n                  Barcode\n                </TableCell>\n                <TableCell>\n                  Name\n                </TableCell>\n                <TableCell>\n                  Price\n                </TableCell>\n                <TableCell>\n                  Amount\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {[...items].slice(page * limit, page * limit + limit).map((item) => (\n                <TableRow\n                  hover\n                  key={item.id}\n                  selected={selectedItemIds.indexOf(item.id) !== -1}\n                >\n                  {/* Barcode */}\n                  <TableCell>\n                    {item.barcode}\n                  </TableCell>\n                  {/* Name */}\n                  <TableCell>\n                    {item.name}\n                  </TableCell>\n                  {/* Price */}\n                  <TableCell>\n                    {item.price}\n                  </TableCell>\n                  {/* Amount */}\n                  <TableCell>\n                    {item.amount}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={items.length}\n        onChangePage={handlePageChange}\n        onChangeRowsPerPage={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  items: PropTypes.array.isRequired\n};\n\nexport default Results;\n"]},"metadata":{},"sourceType":"module"}