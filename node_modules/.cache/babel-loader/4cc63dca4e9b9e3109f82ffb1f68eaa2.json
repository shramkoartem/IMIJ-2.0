{"ast":null,"code":"var _jsxFileName = \"/Users/artemshramko/Documents/projects/react/imij-react/src/views/checkout/CheckoutView/Toolbar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Box, Button, Card, CardContent, TextField, InputAdornment, SvgIcon, makeStyles } from '@material-ui/core';\nimport { Search as SearchIcon } from 'react-feather';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nconst API_URL = 'http://127.0.0.1:5000/items/ajax_data/';\n\nfunction sleep(delay = 0) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Toolbar = ({\n  className,\n  onChangeSearchField,\n  basket,\n  ...rest\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [options, setOptions] = React.useState([]);\n  const loading = open && options.length === 0;\n  useEffect(() => {\n    let active = true;\n\n    if (!loading) {\n      return undefined;\n    }\n\n    (async () => {\n      const response = await fetch(API_URL);\n      await sleep(1e3); // For demo purposes.\n\n      const items = await response.json();\n\n      if (active) {\n        setOptions(Object.keys(items).map(key => items[key].item[0]));\n      }\n    })();\n\n    return () => {\n      active = false;\n    };\n  }, [loading]);\n  useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    mt: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    maxWidth: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    InputProps: {\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(SvgIcon, {\n        fontSize: \"small\",\n        color: \"action\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(SearchIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }\n      })))\n    },\n    placeholder: \"Search items\",\n    variant: \"outlined\",\n    onChange: e => onChangeSearchField(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"asynchronous-demo\",\n    style: {\n      width: 300\n    },\n    open: open,\n    onOpen: () => {\n      setOpen(true);\n    },\n    onClose: () => {\n      setOpen(false);\n    },\n    getOptionSelected: (option, value) => option.name === value.name,\n    getOptionLabel: option => option.name,\n    options: options,\n    loading: loading,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Asynchronous\",\n      variant: \"outlined\",\n      InputProps: { ...params.InputProps,\n        endAdornment: /*#__PURE__*/React.createElement(Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 23\n          }\n        }, loading ? /*#__PURE__*/React.createElement(CircularProgress, {\n          color: \"inherit\",\n          size: 20,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 36\n          }\n        }) : null, params.InputProps.endAdornment)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, \"Add item\"))))));\n};\n\n_s(Toolbar, \"OcGYLEcT8kgxHBQ+eExMC3ff6wU=\", false, function () {\n  return [useStyles];\n});\n\n_c = Toolbar;\nToolbar.propTypes = {\n  className: PropTypes.string,\n  onChangeSearchField: PropTypes.func,\n  basket: PropTypes.array\n};\nexport default Toolbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Toolbar\");","map":{"version":3,"sources":["/Users/artemshramko/Documents/projects/react/imij-react/src/views/checkout/CheckoutView/Toolbar.js"],"names":["React","useEffect","Fragment","PropTypes","clsx","Box","Button","Card","CardContent","TextField","InputAdornment","SvgIcon","makeStyles","Search","SearchIcon","Autocomplete","CircularProgress","API_URL","sleep","delay","Promise","resolve","setTimeout","useStyles","theme","root","importButton","marginRight","spacing","exportButton","Toolbar","className","onChangeSearchField","basket","rest","classes","open","setOpen","useState","options","setOptions","loading","length","active","undefined","response","fetch","items","json","Object","keys","map","key","item","startAdornment","e","width","option","value","name","params","InputProps","endAdornment","propTypes","string","func","array"],"mappings":"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","sourcesContent":["import React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  SvgIcon,\n  makeStyles\n} from '@material-ui/core';\nimport { Search as SearchIcon } from 'react-feather';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst API_URL = 'http://127.0.0.1:5000/items/ajax_data/';\n\nfunction sleep(delay = 0) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  }\n}));\nconst Toolbar = ({\n  className, onChangeSearchField, basket, ...rest\n}) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [options, setOptions] = React.useState([]);\n  const loading = open && options.length === 0;\n\n  useEffect(() => {\n    let active = true;\n\n    if (!loading) {\n      return undefined;\n    }\n\n    (async () => {\n      const response = await fetch(API_URL);\n      await sleep(1e3); // For demo purposes.\n      const items = await response.json();\n\n      if (active) {\n        setOptions(Object.keys(items).map((key) => items[key].item[0]));\n      }\n    })();\n    return () => {\n      active = false;\n    };\n  }, [loading]);\n\n  useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box mt={3}>\n        <Card>\n          <CardContent>\n            <Box maxWidth={500}>\n              <TextField\n                fullWidth\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <SvgIcon\n                        fontSize=\"small\"\n                        color=\"action\"\n                      >\n                        <SearchIcon />\n                      </SvgIcon>\n                    </InputAdornment>\n                  )\n                }}\n                placeholder=\"Search items\"\n                variant=\"outlined\"\n                onChange={(e) => onChangeSearchField(e)}\n              />\n            </Box>\n            <Autocomplete\n              id=\"asynchronous-demo\"\n              style={{ width: 300 }}\n              open={open}\n              onOpen={() => {\n                setOpen(true);\n              }}\n              onClose={() => {\n                setOpen(false);\n              }}\n              getOptionSelected={(option, value) => option.name === value.name}\n              getOptionLabel={(option) => option.name}\n              options={options}\n              loading={loading}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Asynchronous\"\n                  variant=\"outlined\"\n                  InputProps={{\n                    ...params.InputProps,\n                    endAdornment: (\n                      <Fragment>\n                        {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n                        {params.InputProps.endAdornment}\n                      </Fragment>\n                    ),\n                  }}\n                />\n              )}\n            />\n            <Box\n              display=\"flex\"\n              justifyContent=\"flex-end\"\n            >\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Add item\n              </Button>\n            </Box>\n          </CardContent>\n        </Card>\n      </Box>\n    </div>\n  );\n};\n\nToolbar.propTypes = {\n  className: PropTypes.string,\n  onChangeSearchField: PropTypes.func,\n  basket: PropTypes.array\n};\n\nexport default Toolbar;\n"]},"metadata":{},"sourceType":"module"}