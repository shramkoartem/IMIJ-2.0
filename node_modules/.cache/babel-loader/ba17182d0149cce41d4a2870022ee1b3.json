{"ast":null,"code":"var _jsxFileName = \"/Users/artemshramko/Documents/projects/react/imij-react/src/views/checkout/CheckoutView/Toolbar.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Box, Button, Card, CardContent, TextField, makeStyles } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Toolbar = ({\n  className,\n  onClickAddButton,\n  basket,\n  items,\n  ...rest\n}) => {\n  _s();\n\n  const classes = useStyles();\n  let selectedItem = [];\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    mt: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    maxWidth: 700,\n    display: \"flex\",\n    flexDirection: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"autocomplete-field\",\n    freeSolo: true,\n    onChange: (event, value) => {\n      selectedItem = value;\n    },\n    options: items,\n    getOptionLabel: item => item.barcode.toString().concat(' ', item.name),\n    style: {\n      width: 500\n    },\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      fullWidth: true,\n      label: \"Search\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 42\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    marginLeft: \"10px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    onClick: () => onClickAddButton(selectedItem),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"Add item\")))))));\n};\n\n_s(Toolbar, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Toolbar;\nToolbar.propTypes = {\n  className: PropTypes.string,\n  onClickAddButton: PropTypes.func,\n  basket: PropTypes.array,\n  items: PropTypes.array\n};\nexport default Toolbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Toolbar\");","map":{"version":3,"sources":["/Users/artemshramko/Documents/projects/react/imij-react/src/views/checkout/CheckoutView/Toolbar.js"],"names":["React","PropTypes","clsx","Box","Button","Card","CardContent","TextField","makeStyles","Autocomplete","useStyles","theme","root","importButton","marginRight","spacing","exportButton","Toolbar","className","onClickAddButton","basket","items","rest","classes","selectedItem","event","value","item","barcode","toString","concat","name","width","params","propTypes","string","func","array"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  }\n}));\nconst Toolbar = ({\n  className, onClickAddButton, basket, items, ...rest\n}) => {\n  const classes = useStyles();\n  let selectedItem = [];\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box mt={3}>\n        <Card>\n          <CardContent>\n            <Box maxWidth={700} display=\"flex\" flexDirection=\"row\">\n              <Autocomplete\n                id=\"autocomplete-field\"\n                freeSolo\n                onChange={(event, value) => { selectedItem = value; }}\n                options={items}\n                getOptionLabel={(item) => item.barcode.toString()\n                  .concat(' ', item.name)}\n                style={{ width: 500 }}\n                renderInput={(params) => <TextField {...params} fullWidth label=\"Search\" variant=\"outlined\" />}\n              />\n              <Box\n                marginLeft=\"10px\"\n                display=\"flex\"\n                flexDirection=\"column\"\n                justifyContent=\"center\"\n              >\n                <Button\n                  color=\"primary\"\n                  variant=\"contained\"\n                  onClick={() => onClickAddButton(selectedItem)}\n                >\n                  Add item\n                </Button>\n              </Box>\n            </Box>\n          </CardContent>\n        </Card>\n      </Box>\n    </div>\n  );\n};\n\nToolbar.propTypes = {\n  className: PropTypes.string,\n  onClickAddButton: PropTypes.func,\n  basket: PropTypes.array,\n  items: PropTypes.array\n};\n\nexport default Toolbar;\n"]},"metadata":{},"sourceType":"module"}