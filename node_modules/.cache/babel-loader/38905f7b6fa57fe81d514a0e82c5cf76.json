{"ast":null,"code":"var _jsxFileName = \"/Users/artemshramko/Documents/projects/react/imij-react/src/views/items/ItemsListView/AddItemForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Box, Button, Card, CardContent, CardHeader, Divider, IconButton, Grid, TextField, makeStyles } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nconst useStyles = makeStyles(() => ({\n  root: {},\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: '50px'\n  }\n})); // Add Item functional component\n\nconst AddItemForm = ({\n  className,\n  handleModalClose,\n  handleModalSubmit,\n  ...rest\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [values, setValues] = useState({\n    barcode: '',\n    name: '',\n    price: '',\n    amount: ''\n  });\n\n  function handleChange(event) {\n    setValues({ ...values,\n      [event.target.name]: event.target.value\n    });\n  }\n\n  function isEmpty(object) {\n    return Object.values(object).some(x => x !== null && x !== '');\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.modal),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", Object.assign({\n    autoComplete: \"off\",\n    noValidate: true,\n    className: clsx(classes.root, className, classes.modal)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    subheader: \"Please enter product details\",\n    title: \"Add new product\",\n    action: /*#__PURE__*/React.createElement(IconButton, {\n      onClick: handleModalClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CloseIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    helperText: \"Please specify the barcode of the product\",\n    label: \"Barcode\",\n    name: \"barcode\",\n    onChange: handleChange,\n    required: true,\n    value: values.barcode,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Product name\",\n    name: \"name\",\n    onChange: handleChange,\n    required: true,\n    value: values.name,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Price\",\n    name: \"price\",\n    onChange: handleChange,\n    type: \"number\",\n    required: true,\n    value: values.price,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Amount\",\n    name: \"amount\",\n    onChange: handleChange,\n    type: \"number\",\n    required: true,\n    value: values.amount,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    p: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    disabled: !isEmpty(values),\n    color: \"primary\",\n    variant: \"contained\",\n    onClick: () => handleModalSubmit(values),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, \"Submit\")))));\n};\n\n_s(AddItemForm, \"Vl/zPPh7Ncd8gbpdh+48SFNFIAU=\", false, function () {\n  return [useStyles];\n});\n\n_c = AddItemForm;\nAddItemForm.propTypes = {\n  className: PropTypes.string,\n  handleModalClose: PropTypes.func,\n  handleModalSubmit: PropTypes.func\n};\nexport default AddItemForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddItemForm\");","map":{"version":3,"sources":["/Users/artemshramko/Documents/projects/react/imij-react/src/views/items/ItemsListView/AddItemForm.js"],"names":["React","useState","clsx","PropTypes","Box","Button","Card","CardContent","CardHeader","Divider","IconButton","Grid","TextField","makeStyles","CloseIcon","useStyles","root","modal","display","alignItems","justifyContent","marginTop","AddItemForm","className","handleModalClose","handleModalSubmit","rest","classes","values","setValues","barcode","name","price","amount","handleChange","event","target","value","isEmpty","object","Object","some","x","propTypes","string","func"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Grid,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: '50px'\n  },\n}));\n\n// Add Item functional component\nconst AddItemForm = ({\n  className,\n  handleModalClose,\n  handleModalSubmit,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const [values, setValues] = useState({\n    barcode: '',\n    name: '',\n    price: '',\n    amount: ''\n  });\n\n  function handleChange(event) {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  }\n\n  function isEmpty(object) {\n    return Object.values(object).some((x) => (x !== null && x !== ''));\n  }\n\n  return (\n    <div className={clsx(classes.modal)}>\n      <form\n        autoComplete=\"off\"\n        noValidate\n        className={clsx(classes.root, className, classes.modal)}\n        {...rest}\n      >\n        <Card>\n          <CardHeader\n            subheader=\"Please enter product details\"\n            title=\"Add new product\"\n            action={(\n              <IconButton onClick={handleModalClose}>\n                <CloseIcon />\n              </IconButton>\n            )}\n          />\n          <Divider />\n          <CardContent>\n            <Grid\n              container\n              spacing={3}\n            >\n              <Grid\n                item\n                md={6}\n                xs={12}\n              >\n                {/* barcode */}\n                <TextField\n                  fullWidth\n                  helperText=\"Please specify the barcode of the product\"\n                  label=\"Barcode\"\n                  name=\"barcode\"\n                  onChange={handleChange}\n                  required\n                  value={values.barcode}\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid\n                item\n                md={6}\n                xs={12}\n              >\n                {/* product name */}\n                <TextField\n                  fullWidth\n                  label=\"Product name\"\n                  name=\"name\"\n                  onChange={handleChange}\n                  required\n                  value={values.name}\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid\n                item\n                md={6}\n                xs={12}\n              >\n                <TextField\n                  fullWidth\n                  label=\"Price\"\n                  name=\"price\"\n                  onChange={handleChange}\n                  type=\"number\"\n                  required\n                  value={values.price}\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid\n                item\n                md={6}\n                xs={12}\n              >\n                <TextField\n                  fullWidth\n                  label=\"Amount\"\n                  name=\"amount\"\n                  onChange={handleChange}\n                  type=\"number\"\n                  required\n                  value={values.amount}\n                  variant=\"outlined\"\n                />\n              </Grid>\n            </Grid>\n          </CardContent>\n          <Divider />\n          <Box\n            display=\"flex\"\n            justifyContent=\"flex-end\"\n            p={2}\n          >\n            <Button\n              disabled={(!isEmpty(values))}\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={() => handleModalSubmit(values)}\n            >\n              Submit\n            </Button>\n          </Box>\n        </Card>\n      </form>\n    </div>\n  );\n};\n\nAddItemForm.propTypes = {\n  className: PropTypes.string,\n  handleModalClose: PropTypes.func,\n  handleModalSubmit: PropTypes.func\n};\n\nexport default AddItemForm;\n"]},"metadata":{},"sourceType":"module"}