{"ast":null,"code":"var _jsxFileName = \"/Users/artemshramko/Documents/projects/react/imij-react/src/views/checkout/CheckoutView/Results.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types'; // import moment from 'moment';\n\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { // Avatar,\nBox, Card, Checkbox, Table, TableBody, TableCell, TableHead, TablePagination, TableRow // Typography,\n, makeStyles } from '@material-ui/core'; // import getInitials from 'src/utils/getInitials';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  avatar: {\n    marginRight: theme.spacing(2)\n  }\n}));\n\nconst Results = ({\n  className,\n  items,\n  ...rest\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [selectedItemIds, setSelectedItemIds] = useState([]);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(0);\n  console.log(basket);\n  console.log('results render');\n\n  const handleSelectAll = event => {\n    let newSelectedItemIds;\n\n    if (event.target.checked) {\n      newSelectedItemIds = items.map(item => item.id);\n    } else {\n      newSelectedItemIds = [];\n    }\n\n    setSelectedItemIds(newSelectedItemIds);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedItemIds.indexOf(id);\n    let newSelectedItemIds = [];\n\n    if (selectedIndex === -1) {\n      newSelectedItemIds = newSelectedItemIds.concat(selectedItemIds, id);\n    } else if (selectedIndex === 0) {\n      newSelectedItemIds = newSelectedItemIds.concat(selectedItemIds.slice(1));\n    } else if (selectedIndex === selectedItemIds.length - 1) {\n      newSelectedItemIds = newSelectedItemIds.concat(selectedItemIds.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedItemIds = newSelectedItemIds.concat(selectedItemIds.slice(0, selectedIndex), selectedItemIds.slice(selectedIndex + 1));\n    }\n\n    setSelectedItemIds(newSelectedItemIds);\n  };\n\n  const handleLimitChange = event => {\n    setLimit(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  return /*#__PURE__*/React.createElement(Card, Object.assign({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(PerfectScrollbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    minWidth: 1050,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    padding: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: selectedItemIds.length === items.length,\n    color: \"primary\",\n    indeterminate: selectedItemIds.length > 0 && selectedItemIds.length < items.length,\n    onChange: handleSelectAll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, \"Barcode\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, \"Cost\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, \"Price\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, \"Amount\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, items.slice(page * limit, page * limit + limit).map(item => /*#__PURE__*/React.createElement(TableRow, {\n    hover: true,\n    key: item.id,\n    selected: selectedItemIds.indexOf(item.id) !== -1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    padding: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: selectedItemIds.indexOf(item.id) !== -1,\n    onChange: event => handleSelectOne(event, item.id),\n    value: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 19\n    }\n  }, item.barcode), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 19\n    }\n  }, item.name), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 19\n    }\n  }, item.cost), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 19\n    }\n  }, item.price), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 19\n    }\n  }, item.amount))))))), /*#__PURE__*/React.createElement(TablePagination, {\n    component: \"div\",\n    count: items.length,\n    onChangePage: handlePageChange,\n    onChangeRowsPerPage: handleLimitChange,\n    page: page,\n    rowsPerPage: limit,\n    rowsPerPageOptions: [5, 10, 25],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(Results, \"Y5dmS99eXtKF2srMqD8bXb83yk0=\", false, function () {\n  return [useStyles];\n});\n\n_c = Results;\nResults.propTypes = {\n  className: PropTypes.string,\n  basket: PropTypes.array.isRequired\n};\nexport default Results;\n\nvar _c;\n\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"sources":["/Users/artemshramko/Documents/projects/react/imij-react/src/views/checkout/CheckoutView/Results.js"],"names":["React","useState","clsx","PropTypes","PerfectScrollbar","Box","Card","Checkbox","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","makeStyles","useStyles","theme","root","avatar","marginRight","spacing","Results","className","items","rest","classes","selectedItemIds","setSelectedItemIds","limit","setLimit","page","setPage","console","log","basket","handleSelectAll","event","newSelectedItemIds","target","checked","map","item","id","handleSelectOne","selectedIndex","indexOf","concat","slice","length","handleLimitChange","value","handlePageChange","newPage","barcode","name","cost","price","amount","propTypes","string","array","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n// import moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  // Avatar,\n  Box,\n  Card,\n  Checkbox,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  // Typography,\n  makeStyles\n} from '@material-ui/core';\n// import getInitials from 'src/utils/getInitials';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  avatar: {\n    marginRight: theme.spacing(2)\n  }\n}));\n\nconst Results = ({ className, items, ...rest }) => {\n  const classes = useStyles();\n  const [selectedItemIds, setSelectedItemIds] = useState([]);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(0);\n\n  console.log(basket);\n  console.log('results render');\n\n  const handleSelectAll = (event) => {\n    let newSelectedItemIds;\n\n    if (event.target.checked) {\n      newSelectedItemIds = items.map((item) => item.id);\n    } else {\n      newSelectedItemIds = [];\n    }\n\n    setSelectedItemIds(newSelectedItemIds);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedItemIds.indexOf(id);\n    let newSelectedItemIds = [];\n\n    if (selectedIndex === -1) {\n      newSelectedItemIds = newSelectedItemIds.concat(selectedItemIds, id);\n    } else if (selectedIndex === 0) {\n      newSelectedItemIds = newSelectedItemIds.concat(selectedItemIds.slice(1));\n    } else if (selectedIndex === selectedItemIds.length - 1) {\n      newSelectedItemIds = newSelectedItemIds.concat(selectedItemIds.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedItemIds = newSelectedItemIds.concat(\n        selectedItemIds.slice(0, selectedIndex),\n        selectedItemIds.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedItemIds(newSelectedItemIds);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <PerfectScrollbar>\n        <Box minWidth={1050}>\n          <Table stickyHeader aria-label=\"sticky table\">\n            <TableHead>\n              <TableRow>\n                <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={selectedItemIds.length === items.length}\n                    color=\"primary\"\n                    indeterminate={\n                      selectedItemIds.length > 0\n                      && selectedItemIds.length < items.length\n                    }\n                    onChange={handleSelectAll}\n                  />\n                </TableCell>\n                <TableCell>\n                  Barcode\n                </TableCell>\n                <TableCell>\n                  Name\n                </TableCell>\n                <TableCell>\n                  Cost\n                </TableCell>\n                <TableCell>\n                  Price\n                </TableCell>\n                <TableCell>\n                  Amount\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {items.slice(page * limit, page * limit + limit).map((item) => (\n                <TableRow\n                  hover\n                  key={item.id}\n                  selected={selectedItemIds.indexOf(item.id) !== -1}\n                >\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      checked={selectedItemIds.indexOf(item.id) !== -1}\n                      onChange={(event) => handleSelectOne(event, item.id)}\n                      value=\"true\"\n                    />\n                  </TableCell>\n                  {/* Barcode */}\n                  <TableCell>\n                    {item.barcode}\n                  </TableCell>\n                  {/* Name */}\n                  <TableCell>\n                    {item.name}\n                  </TableCell>\n                  {/* Cost */}\n                  <TableCell>\n                    {item.cost}\n                  </TableCell>\n                  {/* Price */}\n                  <TableCell>\n                    {item.price}\n                  </TableCell>\n                  {/* Amount */}\n                  <TableCell>\n                    {item.amount}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={items.length}\n        onChangePage={handlePageChange}\n        onChangeRowsPerPage={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  basket: PropTypes.array.isRequired\n};\n\nexport default Results;\n"]},"metadata":{},"sourceType":"module"}